"use strict";function _interopRequireDefault(a){return a&&a.__esModule?a:{"default":a}}var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of"),_getPrototypeOf2=_interopRequireDefault(_getPrototypeOf),_classCallCheck2=require("babel-runtime/helpers/classCallCheck"),_classCallCheck3=_interopRequireDefault(_classCallCheck2),_createClass2=require("babel-runtime/helpers/createClass"),_createClass3=_interopRequireDefault(_createClass2),_possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn"),_possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2),_inherits2=require("babel-runtime/helpers/inherits"),_inherits3=_interopRequireDefault(_inherits2),path=require("path"),_require=require("electron"),app=_require.app,BrowserWindow=_require.BrowserWindow,ipcMain=_require.ipcMain,Base=require("../Base"),RecorderFocusManager=require("./RecorderFocusManager"),Util=require("../Util"),rootLogger=require("orion-core/lib/Logger").getInstance(),logger=rootLogger.forClass("process/ElectronSandboxProcess"),allowedMessages={run:1,setLogLevel:1,terminate:1},mainWindow=null,showSandboxIcon=!1,showSandboxDevTools=!1,ElectronSandboxProcess=function(a){function b(){return(0,_classCallCheck3["default"])(this,b),(0,_possibleConstructorReturn3["default"])(this,(b.__proto__||(0,_getPrototypeOf2["default"])(b)).apply(this,arguments))}return(0,_inherits3["default"])(b,a),(0,_createClass3["default"])(b,[{key:"ctor",value:function(){logger.trace(".ctor");var a=this;rootLogger.addHandler(function(b,c){a.send({type:"log",level:b,message:c})}),ipcMain.on("log",function(b,c,d){a.send({type:"log",level:c,message:d})}),process.on("message",function(b){var c=b.type;allowedMessages[c]?a[c](b):logger.error("Invalid message received: "+c)}),process.send("ipcReady");var b=setInterval(function(){a._terminated&&clearInterval(b)},1e3)}},{key:"run",value:function(a){var b,c=this,d=a.devtoolsPort,e=a.url,f=a.runConfig,g=f.logLevel,h=path.normalize(__dirname+"/../../sandbox/preload.js");rootLogger.setLevel(g),logger.info("Sandbox process running"),c._app=app,showSandboxIcon||(app.setBadgeCount(0),app.setBadge&&app.setBadge(""),app.dock&&app.dock.hide()),app.commandLine.appendSwitch("disable-http-cache"),d&&app.commandLine.appendSwitch("remote-debugging-port",d.toString()),app.on("window-all-closed",function(){"darwin"!=process.platform&&app.quit()}),b=function(){if(mainWindow=new BrowserWindow({title:"Sencha Test Sandbox",webPreferences:{preload:h,webSecurity:!1},skipTaskbar:!0,frame:!1,transparent:!0,toolbar:!1,resizable:!1,show:showSandboxDevTools,width:showSandboxDevTools?640:0,height:showSandboxDevTools?480:0}),mainWindow.runConfig=f,showSandboxDevTools&&mainWindow.openDevTools(),c.send("sandboxCreated"),logger.debug("Loading",e),mainWindow.loadURL(e),mainWindow.webContents.on("dom-ready",function(){c.send("sandboxReady")}),mainWindow.on("closed",function(){c.send("sandboxClosed"),mainWindow=null,process.exit()}),Util.isMac){var a,b=require("./RecorderFocusManager"),d=require("electron").ipcMain,g=new b,i=logger.forClass("Topper");d.on("updateRecorderFocusManager",function(b,c){i.babble("got updateRecorderFocusManager message from renderer process");try{a=g.update(c.browserTitle,c.browserName),a.on("message",function(a){i.babble("recorderFocusManager msg: "+a)}),a.stdout.on("data",function(a){i.babble("recorderFocusManager stdout: "+a)}),a.stderr.on("data",function(a){i.babble("recorderFocusManager stderr: "+a)})}catch(d){i.babble("recorderFocusManager threw error: "+d)}b.returnValue=!0}),i.babble("after registering ipcMain.on startTopper")}Util.isLinux&&mainWindow.setAlwaysOnTop(!0)},app.isReady()?b():(app.disableHardwareAcceleration(),app.on("ready",b))}},{key:"setLogLevel",value:function(a){var b=a.level,c=a.path;logger.trace("._setLogLevel <=",b,c),rootLogger.setLevel(b,c),mainWindow.send("setLogLevel",b,c)}},{key:"send",value:function(a){process.send?process.send(a):console.log(a)}},{key:"terminate",value:function(){logger.trace("._terminate"),this._terminated=!0,this._app.quit(),this.send("sandboxTerminated")}}]),b}(Base);module.exports=ElectronSandboxProcess;