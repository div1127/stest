"use strict";

describe ('_decodeParams', () => {
    
    const { createDom } = require('../../../helper/jsdom-util');
    
    beforeEach(() => {
        var dom = createDom(),
            window = dom.window,
            _ST = window.ST;
        
        _ST.defaultContext = new _ST.context.Local();
        
        this.window = window;
    });
    
    it ('should add additional params to the restParams array', () => {
        var params = 'arg1,arg2',
            args = ['value1', 'value2', 'restParam1', 'restParam2'],
            _ST = this.window.ST,
            future = _ST.element('@'),
            result = future._decodeArgs(args, params, {});
        
        expect(result.arg1).toBe('value1');
        expect(result.arg2).toBe('value2');
        expect(result.restParams.length).toBe(2);
        expect(result.restParams[0]).toBe('restParam1');
        expect(result.restParams[1]).toBe('restParam2');
    });

    it ('should have an empty restParams array if no extra arguments are passed', () => {
        var params = 'fn,timeout',
            args = ['fnName', 5000],
            _ST = this.window.ST,
            future = _ST.element('@'),
            result = future._decodeArgs(args, params, {});

        expect(result.fn).toBe('fnName');
        expect(result.timeout).toBe(5000);
        expect(result.restParams.length).toBe(0);
    });
    
});
